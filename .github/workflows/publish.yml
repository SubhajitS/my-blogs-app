name: Build & Publish

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      CONTAINER_NAME: $web
      IMAGE_NAME: app
      
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 14.18.1
      uses: actions/setup-node@v3
      with:
        node-version: 14.18.1
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Setup host file
      run: |
        sudo echo "20.187.121.32 sccm.dev.local" | sudo tee -a /etc/hosts
    - name: Build and Export
      run: npm run export:production
    - name: Upload to storage account
      uses: Azure/cli@v1
      with:
        inlineScript: |
          az storage blob upload-batch --connection-string '${{ secrets.STORAGE_CONNECTION_STRING }}' -d '${{ env.CONTAINER_NAME }}' -s out/ --overwrite true
          
    - name: Create docker image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}" --add-host=sccm.dev.local:20.187.121.32
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
